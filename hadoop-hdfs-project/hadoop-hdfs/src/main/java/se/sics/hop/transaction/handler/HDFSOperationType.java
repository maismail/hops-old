package se.sics.hop.transaction.handler;
import se.sics.hop.transaction.handler.RequestHandler.OperationType;
/**
 *
 * @author Mahmoud Ismail <maism@sics.se>
 */
public enum HDFSOperationType implements OperationType {
  // NameNodeRpcServer

  INITIALIZE, ACTIVATE, META_SAVE, SET_PERMISSION, SET_OWNER,
  GET_BLOCK_LOCATIONS, GET_STATS, CONCAT, SET_TIMES, CREATE_SYM_LINK, GET_PREFERRED_BLOCK_SIZE,
  SET_REPLICATION, START_FILE, RECOVER_LEASE, APPEND_FILE, GET_ADDITIONAL_BLOCK,
  GET_ADDITIONAL_DATANODE, ABANDON_BLOCK, COMPLETE_FILE, RENAME_TO, RENAME_TO2,
  PRE_DELETE_CHECK, DELETE, GET_FILE_INFO, MKDIRS, GET_CONTENT_SUMMARY, SET_QUOTA,
  FSYNC, COMMIT_BLOCK_SYNCHRONIZATION, RENEW_LEASE, GET_LISTING, REGISTER_DATANODE,
  HANDLE_HEARTBEAT, GET_MISSING_BLOCKS_COUNT, SAVE_NAMESPACE, SAFE_MODE_MONITOR,
  SET_SAFE_MODE, GET_BLOCKS_TOTAL, PROCESS_DISTRIBUTED_UPGRADE, GET_FS_STATE,
  UPDATE_BLOCK_FOR_PIPELINE, UPDATE_PIPELINE, LIST_CORRUPT_FILE_BLOCKS,
  GET_DELEGATION_TOKEN, RENEW_DELEGATION_TOKEN, CANCEL_DELEGATION_TOKEN,
  GET_SAFE_MODE, GET_NUMBER_OF_MISSING_BLOCKS, GET_PENDING_DELETION_BLOCKS_COUNT, GET_EXCESS_BLOCKS_COUNT,
  SET_ROOT, GET_ROOT,
  //BlockManager
  FIND_AND_MARK_BLOCKS_AS_CORRUPT, PREPARE_PROCESS_REPORT, PROCESS_FIRST_BLOCK_REPORT, PROCESS_REPORT, AFTER_PROCESS_REPORT,
  BLOCK_RECEIVED_AND_DELETED_INC_BLK_REPORT, RESCAN_MISREPLICATED_BLOCKS,
  PROCESS_MIS_REPLICATED_BLOCKS, GET_ALL_MACHINE_BLOCKS,GET_ALL_MACHINE_BLOCKS_IDS, REMOVE_STORED_BLOCK,
  CHECK_REPLICATION_IN_PROGRESS, PROCESS_OVER_REPLICATED_BLOCKS_ON_RECOMMISSION, GET_ALL_BLOCKS, GET_ALL_BLOCKS_SIZE,
  REPLICATION_MONITOR, COMPUTE_REPLICATION_WORK_FOR_BLOCK, PROCESS_QUEUED_REPORT, PROCESS_TIMEDOUT_PENDING_BLOCK, GET_VALID_BLK_LOCS,
  COUNT_CORRUPT_REPLICAS, GET_ALL_CORRUPT_REPLICAS,
  GET_NUM_INVALIDATED_BLKS, GET_INV_BLKS_BY_STORAGEID, RM_INV_BLKS, GET_ALL_INV_BLKS, DEL_ALL_INV_BLKS, DEL_ALL_EXCESS_BLKS, DEL_ALL_UNDER_REPLICATED_BLKS,
  COUNT_ALL_UNDER_REPLICATED_BLKS, COUNT_UNDER_REPLICATED_BLKS_LESS_THAN_LVL4, COUNT_UNDER_REPLICATED_BLKS_AT_LVL, GET_ALL_UNDER_REPLICATED_BLKS, GET_UNDER_REPLICATED_BLKS_By_LEVEL_LIMITED,
  DEL_ALL_PENDING_REPL_BLKS, COUNT_ALL_VALID_PENDING_REPL_BLKS, GET_TIMED_OUT_PENDING_BLKS, GET_BLOCK, GET_EXCESS_RELPLICAS_BY_STORAGEID, CHOOSE_UNDER_REPLICATED_BLKS,
  ADD_INV_BLOCKS, AFTER_PROCESS_REPORT_ADD_BLK, AFTER_PROCESS_REPORT_ADD_UC_BLK, AFTER_PROCESS_REPORT_ADD_CORRUPT_BLK, GET_INODE_IDS, RESOLVE_INODE_FROM_BLOCKID, GET_BLOCKS, REMOVE_UNDER_REPLICATED_BLOCK,
  // DatanodeManager
  REMOVE_DATANODE, REFRESH_NODES,
  //DecommisionManager
  DECOMMISION_MONITOR,
  //HeartbeatManager
  HEARTBEAT_MONITOR,
  //LeaseManager
  PREPARE_LEASE_MANAGER_MONITOR, LEASE_MANAGER_MONITOR, GET_SORTED_LEASES, REMOVE_ALL_LEASES,
  // LeaderElection
  SELECT_ALL_NAMENODES, LEADER_EXIT, GET_ALL_NAME_NODES, GET_LEADER, LEADER_ELECTION, UPDATE_LEADER_COUNTER, REMOVE_PREV_LEADERS,
  // BlockTokenSecretManagerNN
  ADD_BLOCK_TOKENS, GET_ALL_BLOCK_TOKENS, GET_BLOCK_TOKENS, REMOVE_ALL, GET_KEY_BY_TYPE, REMOVE_BLOCK_KEY, UPDATE_BLOCK_KEYS, GET_KEY_BY_ID, REMOVE_ALL_BLOCK_KEYS,
  // Block Generationstamp
  GET_GENERATION_STAMP, SET_GENERATION_STAMP,
  //FSNamesystem
  TOTAL_FILES, GET_STORAGE_INFO, GET_COMPLETE_BLOCKS_TOTAL, SET_GEN_STAMP,
  //ClusterInfos
  GET_CLUSTER_INFO,
  // NNStorage
  ADD_STORAGE_INFO,
  //NamenodeJspHElper
  GET_SAFE_MODE_TEXT, GENERATE_HEALTH_REPORT, GET_INODE, TO_XML_BLOCK_INFO,
  TO_XML_CORRUPT_BLOCK_INFO,
  // TestNamenodePing
  COUNT_LEASE,
  // BLockManagerTestUtil
  UPDATE_STATE, GET_REPLICA_INFO, GET_NUMBER_OF_RACKS, GET_COMPUTED_DATANODE_WORK,
  // TestBlockManager
  REMOVE_NODE, FULFILL_PIPELINE, BLOCK_ON_NODES, SCHEDULE_SINGLE_REPLICATION,
  // TestComputeInvalidatedWork
  COMP_INVALIDATE,
  // TestCorruptReplicaInfo
  TEST_CORRUPT_REPLICA_INFO, TEST_CORRUPT_REPLICA_INFO2, TEST_CORRUPT_REPLICA_INFO3,
  // TestDatanodeDescriptor
  TEST_BLOCKS_COUNTER,
  // TestNodeCount
  COUNT_NODES,
  // TestOverReplicatedBlocks
  TEST_PROCESS_OVER_REPLICATED_BLOCKS,
  // TestPendingReplication
  TEST_PENDING_REPLICATION, TEST_PENDING_REPLICATION2, TEST_PENDING_REPLICATION3,
  TEST_PENDING_REPLICATION4,
  // TestUnderReplicatedBlocks
  SET_REPLICA_INCREAMENT,
  // TestBlockReport
  TEST_BLOCK_REPORT, TEST_BLOCK_REPORT2, PRINT_STAT,
  // TestBlockUnderConstruction
  VERIFY_FILE_BLOCKS,
  // TestFsLimits
  VERIFY_FS_LIMITS,
  // TestSafeMode
  TEST_DATANODE_THRESHOLD,
  // TestDfsRename
  COUNT_LEASE_DFS_RENAME,
  // NameNodeAdapter
  GET_LEASE_BY_PATH,
  // DFSTestUtil
  WAIT_CORRUPT_REPLICAS,
  // NNThroughputBenchmark
  ADD_INODE,
  // TestNodeCount
  TEST_NODE_COUNT,
  // Transaction in unit tests.
  TEST,
  GET_VARIABLE,
  INITIALIZE_SID_MAP,
  GET_SET_SID,
  UPDATE_INODE_ID_COUNTER,
  UPDATE_BLOCK_ID_COUNTER,
  GET_INODES_BATCH,
  COUNT_REPLICAS_ON_NODE,
  GET_INODEIDS_FOR_BLKS,
  GET_ALL_INODES,
  PROCESS_MIS_REPLICATED_BLOCKS_PER_INODE_BATCH
}
