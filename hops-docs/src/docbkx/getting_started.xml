<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
    <title>Hands on</title>
    <para>Hadoop Open Platform-as-a-service, is an effort to offer a high performance next generation
        hadoop platform focusing in improving its scalability, availability and reliability. This section describes
        the information and materials you need in order to start working with our data platform by making use
        of our Hadoop Open PaaS dashboard. HOPS dashboard provides an end-to-end management and 
        monitoring application of our Hadoop distribution operating in the datacenter of your choice. With our
        dashboard, thanks to its graphical user interface (GUI); you will be able to manage your cluster, 
        define the cluster infrastructure of your choice, monitor services and alerts through a centralized application
        You will find here all the necessary information in order to easily deploy our solution in the 
        infrastructure of your choice.
    </para>

    <section>
        <title>Basics:</title>
        <para>Hadoop Open Platform-as-a-Service consists of multiple services:
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>Core Platform:</emphasis> The basic components of our Hadoop distribution.
                        <orderedlist>
                            <listitem>
                                <para>
                                    <emphasis>Hadoop Distributed File System (HDFS):</emphasis>
                                    Hadoop provides high-throughput access to data in a highly distributed environment. 
                                    In our case our distribution is based on Hadoop version 2 release modified in order to offer 
                                    extended mechanism for more scalable and available namenode.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>MySQL Cluster:</emphasis>
                                    MySQL Cluster is a higly scalable, real-time, ACID-complaint transactional database.
                                    Designed around a distributed, multi-master architecture with no single point of failure;
                                    MySQL Cluster's real-time design delivers predictable, milisecond response times with 
                                    the ability to service millions of operations per second. In the case of our data platform, it is
                                    used to handle and manage the state of our multi-namenode solution of our architecture.                                    
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>YARN:</emphasis>
                                    Resource negotiator for managing high volume distributed data processing tasks against
                                    HDFS. This allows user to process data intensive task like MapReduce jobs or in our case
                                    our future support for bioinformatic workflow tasks engine which will make use of YARN
                                    to handle and negotiate the scheduling of this type of jobs.                                     
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Open Platform-as-a-Service:</emphasis> 
                        The key components behind our Open Platform-as-a-Service solution.
                        <orderedlist>
                            <listitem>
                                <para>
                                    <emphasis>Chef:</emphasis>
                                    Chef is a systems and cloud infrastructure automation framework based on Ruby 
                                    that simplifies deployment of servers and applications to any physical, virtual or cloud location
                                    no matter the size of the infrastructure. The chef-client relies in a series of abstract definitions 
                                    (defined as cookbooks and recopes) which are managed in Ruby and are treated like source code.
                                    With each definition, we describe how a specific part should be built and managed, which then; the chef-client
                                    applies these definitions to deploy and configure servers and applications as specified.
                                    In most of the cases, it is simple enough to let chef-client know which cookbooks and recipes
                                    it needs to apply.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>Apache JClouds:</emphasis>
                                    Apache JClouds is an open source multi-api interface which allows easy interaction 
                                    with multiple cloud providers and cloud software stacks. This open source api gives 
                                    support around 30 providers which include Amazon, Azure, OpenStack and 
                                    Rackspace. JClouds offers api implementations both in Java or Clojure.
                                    Through they simple interface, it is very simple to deploy and port your application
                                    over different cloud environments.            
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>SnakeYAML and YAML:</emphasis>
                                    YAML (YAML Ain't  Markup Language) is markup language which takes concepts from
                                    programming languages such as C, Perl and Python, and ideas from XML. YAML syntax
                                    allows easy mappings of common data types found in high level languages like list, 
                                    associative arrays and scalar. It makes it suitable for tasks where humans are likely to
                                    view or edit data structures, such as configuration files or in our case, cluster
                                    definition files. Additionally, we make use of the open source parser SnakeYAML to parse
                                    the contents of our cluster definition files.
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Hadoop Support:</emphasis> 
                        Set of components that allow easy monitoring your hadoop installation.
                        <orderedlist>
                            <listitem>
                                <para>
                                    <emphasis>Collectd:</emphasis>
                                    Collectd is a daemon which collects system performance statistics periodically and 
                                    provides mechanisms to store values in a variety of ways like RRD files. Collectd 
                                    gathers statistics about the system it is running and stores this information. With 
                                    these statistics, we can keep track of the performance of your cluster and detect
                                    possible failures and performance bottlenecks that might be needed to be address.
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    <section>
        <title>Requirements:</title>
        <para>
            In order to make use of our data platform, it is essential that you have a running a copy of our
            dashboard application running in your main machine through one of the supported environments
            we offer, and that machine is has connectivity both to the rest of your cluster or 
            cloud Infrastructure. For ease of use, we currently have available our own web portal, 
            that in matter of minutes, will deploy our dashboard. For now, the supported OS in our test bed was
            Ubuntu 12.04 or higher.
            The following environments are currently fully supported:
        
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>Amazon Web Services:</emphasis>
                        In order to make use of our platform in this cloud Infrastructure, it is necessary that you provide
                        the credentials for you EC2 account in order to deploy our dashboard application in a Amazon
                        Instance and the minimum recommend Instance type should be at least the resources of an 
                        m1.large type Instance with ubuntu running (our default testing bed used version 12.04)
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Baremetal Physical Machine:</emphasis>
                        It is possible deploy our solution on a physical machine, and; in order to do it you only need
                        to provide us the security credentials and access to the specific machine so we can deploy our 
                        software through SSH with an account with sudo access. 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Vagrant:</emphasis>
                        We also count with support with vagrant deployment. With our vagrant distribution, you can 
                        easily deploy locally in one VM machine a whole cluster using our data platform. Ideal for getting
                        contact and test our platform before trying it in a production environment.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    <section>
        <title>Hadoop Open Platform-as-a-Service Portal:</title>
        <para>
            The HOPS web portal, is an entry point were users can test our platform in one of our
            supported environments. It is a simple web application that can deploy our dashboard in Amazon or in
            a private machine of your choice with external connectivity. With our dashboard, later on you can 
            deploy and configure the rest of your cluster using our solution. Once you have the dashboard on 
            environment of your choice, proceed to one of the installation guides found in this manual 
            in the desired environment.
        </para>
    </section>
    <section>
        <title>How to launch a HOPS Dashboard:</title>
        <para>
            Launching a HOPS Dashboard is quite simple and takes a couple of minutes, here you may find
            instructions on how to use the dashboard for Amazon EC2 and Baremetal Machine:
            <orderedlist>
                <listitem>
                    <para>
                        <emphasis>Amazon EC2:</emphasis>
                        In order to deploy our dashboard in Amazon EC2 in the region of your choice follow these 
                        simple steps:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Login into the HOPS Portal with your user name and password.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    In the new page, select from the providers the Amazon EC2 option. A form will be 
                                    generated were you need to fill in the following:
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Dashboard credential, were you specify the admin username and password 
                                                in order to access your newly created dashboard.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                EC2 credentials which include the Access Key id from you AWS account with 
                                                its related Secret key.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Configuration parameters that we need to in order to deploy a virtual 
                                                machine in Amazon with default values that you may want to change:
                                                <orderedlist>
                                                    <listitem>
                                                        <para>
                                                            Security group where the machine will be deployed. If it does not exist,
                                                            we will create it and open the ports needed for our application.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            The hardware ID of the instance type we want to use from Amazon EC2. 
                                                            For example, m1.small, t1.micro. The recommended instance type is
                                                            m1.large.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Image ID which includes the region of that image and the ami id tag.
                                                            We only support ubuntu based images.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Location ID of the region you want to deploy the dashboard.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Selecting the option to authorize the public key, it will open a new option
                                                            were you can insert your desired public key so you can access the virtual
                                                            machine as by default we generate random key pairs for the machine
                                                            through EC2 key pair service, and it is not possible to access the machine
                                                            internally without this option.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Selecting the override login user, will override the default user for ubuntu
                                                            AMI images with the login user of your choice. This is necessary if you
                                                            are going to use a custom based ubuntu image which are not one 
                                                            of the Ubuntu images that canonical offer in Amazon by default.
                                                        </para>
                                                    </listitem>
                                                </orderedlist>
                                            </para>
                                        </listitem>
                                       
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    To start the process after filling up the form, press the launch instance button. 
                                    The whole process will probably take between 10-15 minutes on average. In the end,
                                    you will receive a notification showing the address were you can access the Dashboard
                                    in your browser and its private ip address. To login, use the credentials you specified
                                    previously in the portal.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>OpenStack:</emphasis>
                        In order to deploy our dashboard in OpenStack of your choice follow these 
                        simple steps, note this is in alpha state:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Login into the HOPS Portal with your user name and password.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    In the new page, select from the providers the Amazon EC2 option. A form will be 
                                    generated were you need to fill in the following:
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Dashboard credential, were you specify the admin username and password 
                                                in order to access your newly created dashboard.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                OpenStack credentials, the user name to access the OpenStack project and 
                                                its password. The username should be a concatenation of the OpenStack 
                                                project name and the user for that project. For example "projectName:user"
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Configuration parameters that we need to in order to deploy a virtual 
                                                machine in OpenStack with default values that you may want to change:
                                                <orderedlist>
                                                    <listitem>
                                                        <para>
                                                            Security group where the machine will be deployed. If it does not exist,
                                                            we will create it and open the ports needed for our application.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            The hardware ID of the instance type we want to use in OpenStack. 
                                                            This is a number which corresponds to the type of instance you want 
                                                            to deploy and is supported by your OpenStack infrastructure 
                                                            We recommended using a configuration similar to a m1.large in EC2.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Image ID corresponding to the id of the image located in the openstack
                                                            project you want to deploy the dashboard.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Location ID of the project you want to deploy the dashboard.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Selecting the option to authorize the public key, it will open a new option
                                                            were you can insert your desired public key so you can access the virtual
                                                            machine as by default we generate random key pairs for the machine
                                                            through OpenStack key pair service, and it is not possible to access the machine
                                                            internally without this option.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Selecting the override login user. This is necessary for OpenStack if you
                                                            are going to use a custom based ubuntu image.
                                                        </para>
                                                    </listitem>
                                                </orderedlist>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    To start the process after filling up the form, press the launch instance button. 
                                    The whole process will probably take between 10-15 minutes on average. In the end,
                                    you will receive a notification showing the address were you can access the Dashboard
                                    in your browser and its private ip address. To login, use the credentials you specified
                                    previously in the portal.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                    <note>
                        <title>IP pools in OpenStack</title>
                        <para>
                            In order to deploy successfully a dashboard in OpenStack, it is necessary that you have allocated
                            at least 1 public IP in that project. During the deployment phase we will query the OpenStack
                            project and link the public ip to the created VM.
                        </para>
                    </note>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Baremetal Physical Machine:</emphasis>
                        In order to deploy our dashboard in a physical machine of your choice follow these 
                        simple steps:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Login into the HOPS Portal with your user name and password.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    In the new page, select from the providers the Amazon EC2 option. A form will be 
                                    generated were you need to fill in the following:
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Dashboard credential, were you specify the admin username and password 
                                                in order to access your newly created dashboard.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                SSH credentials which include the host address of the machine we want to
                                                connect to and the private key to connect.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Extra parameters that we might need:
                                                <orderedlist>
                                                    <listitem>
                                                        <para>
                                                            Selecting the option to authorize the public key, it will open a new option
                                                            were you can insert your desired public key to allow extra access to the 
                                                            machine.
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Selecting the override login user, here you fill the name of the sudo user
                                                            to use to deploy our dashboard on the machine.
                                                        </para>
                                                    </listitem>
                                                </orderedlist>
                                            </para>
                                        </listitem>
                                       
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    To start the process after filling up the form, press the launch instance button. 
                                    The whole process will probably take between 10-15 minutes on average. In the end,
                                    you will receive a notification showing the address were you can access the Dashboard
                                    in your browser and its private ip address. To login, use the credentials you specified
                                    previously in the portal.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
    </section>
</section>
