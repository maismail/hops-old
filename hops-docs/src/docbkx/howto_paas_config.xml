<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
    <title>Defining Clusters</title>

    <para>
        In this section, we describe the tools we offer in order to easily define and structure your clusters
        for their deployment through our orchestration architecture from the  dashboard. In here, we will introduce
        you to our definition language to define clusters for cloud providers like Amazon EC2 and OpenStack
        or Baremetal clusters based on physical machines. Also we will give you hints and aspects you
        should consider when structuring your cluster with our language. With our cluster definition language,
        you will see that you will easily have a cluster deployed in a matter of minutes by making use of technologies
        like Chef that will be in charge of orchestrating the nodes while we provision them with Jclouds (in the case
        of a virtual environment) or a simple SSH client for your baremetal machines.
    </para>
    <section>
        <title>Cluster Domain Specific Language:</title>
        <para>
            We will start first by presenting our cluster DSL with which you will be capable of defining in a simple
            manner the structure of your clusters while including extra information in relation to the type of 
            environment you want to deploy your cluster. In general, we handle the following abstractions:
            <itemizedlist>
                <listitem>
                    <para>
                        <emphasis>Cluster:</emphasis>
                        A cluster is an entity that defines a whole system based on a heterogenous structure composed
                        of multiple nodes. In most of the cases, we can classify the nodes into groups depending of
                        the software they run. Also you need to provide the specific class tag of the type of cluster
                        you want to deploy apart from other properties of interest like extra services you want to deploy
                        in all of the nodes of the cluster.
                        <programlisting>
                            !!se.kth.kthfsdashboard.virtualization.clusterparser.Cluster
                            ##name of your cluster
                            name: test2
                            ##enable install phase
                            installPhase: true
                            ##global parameters
                            global:
                            ##user defined recipes
                                recipes: 
                                - ssh 
                                - chefClient
                            ## extra ports you want to open
                                authorizePorts: 
                                - 3306
                                - 4343 
                                - 3321
                        </programlisting>
                        <note>
                            <title>Git Repositories</title>
                            <para>
                                If you want further customization, it is possible to fork our git repository and 
                                customize our chef recipes if you want to modify some parameters of our cluster. Also
                                you can add your own recipes if you decide to launch other services on your code.
                                Simply add this snippet of code under global parameters.
                                <programlisting>
                                    git:
                                    user: Jim Dowling
                                    repository: https://ghetto.sics.se/jdowling/hops-chef.git
                                    key: notNull
                                </programlisting>
                            </para>
                        </note>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Services:</emphasis>
                        We identify multiple services, in our case related to HOPstart platform. You can spread this
                        services quite easily among different nodes just indicating that information when grouping
                        them. Also you may indicate further services to be deployed on them.
                        <programlisting>
                            service: 
                                - datanode 
                                - nodemanager
                            number: 2

                        </programlisting>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Provider:</emphasis>
                        In the case of defining a cluster to be deployed in a virtualized environment through an
                        Amazon EC2 infrastructure or an OpenStack environment, you can give information of
                        the image you want to use, the type of instance to request, login credentials in case you
                        are using custom images.
                        <programlisting>
                            provider:
                                ##name of the provider, use aws-ec2 or openstack-nova  
                                name: aws-ec2
                                ##if EC2 use a value to one of EC2 types, in OpenStack this is an id number of the 
                                ##type of instance you want to use
                                instanceType: m1.large
                                ## indicate the login user of the machine with sudo access, necessary for custom images
                                ## or openstack image
                                loginUser: ubuntu
                                ## image you want in EC2 or OpenStack
                                image: eu-west-1/ami-35667941 
                                ##region of EC2 or project name in OpenStack
                                region: eu-west-1
                        </programlisting>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            We will also see that the syntax differs depending if you are designing your cluster towards a 
            virtualized environment or a physical environment. In the following sections, we will go through 
            detailed examples for both types of clusters.
        </para>
    </section>
    <section>
        <title>Structuring your Cluster:</title>
        <para>
            Before using our tools, it is important that you have at least an idea of how you want to structure
            the services of our data platform among the different machines that will be part of the cluster.
            In our case, a fully functional cluster requires the following services deployed in different machines:
            <orderedlist>
                <listitem>
                    <para>
                        <emphasis>MySQL Cluster:</emphasis>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>MySQL-NDB:</emphasis>
                                    Your cluster should contain at least 2 instances of NDB
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>MySQL-MGM:</emphasis>
                                    Your cluster should contain at least 1 instance of a Management Server.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>MySQL-Mysqld:</emphasis>
                                    Your cluster should contain at least 1 instance of a MySQL Server.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>HOPStart</emphasis>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>Namenode:</emphasis>
                                    Your cluster should contain at least 2 namenode instances of our Hadoop Solution.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>Datanode:</emphasis>
                                    Your cluster should contain at least 2 datanode instances of our Hadoop Solution.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis>Data processing</emphasis>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>ResourceManager:</emphasis>
                                    Your cluster should contain at least 1 resource manager instances of YARN.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>NodeManager:</emphasis>
                                    Your cluster should contain at least 2 node manager instances of YARN.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>Spark:</emphasis>
                                    Your cluster should contain at least one instance of Spark if you want to do data
                                    processing through Spark to submit your jobs to the system.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </orderedlist>
            <note>
                <title>Multiple Services per Node</title>
                <para> 
                    The previous structure gave a very simple overview of the components that are needed for
                    a HOPstart cluster to work correctly. It is viable to allocate various services in one machine or
                    group of machines as we will see in the following sections.
                </para>
            </note>
        </para>
        <para>
            Now that we have a general perspective of how a cluster looks like, the next step is to identify
            the environment of your choice for the cluster you want to work with. In the following sections,
            we will describe how you can define the structure for virtualized cloud providers like Amazon EC2 
            and OpenStack or in a physical baremetal environment.
        </para>
    </section>
    <section>
        <title>Building your cluster:</title>
        <para>
            In this section, we will explain through a couple of complete examples how to define your cluster 
            for Amazon EC2, OpenStack or Baremetal. We will show you how to write your cluster from scratch
            using your own YAML file or you can use the available cluster wizard in order to generate your 
            desired cluster. 
        </para>
        <section>
            <title>Cluster in AWS</title>
            <para>
                Lets imagine that we want to define a complete HOPstart which will contain a basic minimal setup.
                In this case we need 2 NDBs, 1 MGM and 1 Mysqld for the MySQL cluster, 2 namenode and 2 
                datanode for the Hadoop File System and in order to user Spark, a Spark instance with 1 resource
                manager and 2 node managers. How we could map the services using only 7 machines?
                A very simple configuration could be as follows:
                <programlisting>
                    !!se.kth.kthfsdashboard.virtualization.clusterparser.Cluster
                    name: test2                 
                    provider:
                        name: aws-ec2
                        instanceType: m1.large
                        loginUser: ubuntu
                        image: eu-west-1/ami-35667941 
                        region: eu-west-1
                    
                    ##lists of groups, with the roles the nodes 
                    ##will have and open ports 
                    nodes:
                    - service: 
                        - ndb
                      number: 2
    
                    - service: 
                        - mgm
                      number: 1
    
                    - service:
                        - mysqld
                        - namenode
                      number: 1
                    
                    - service: 
                        - namenode
                        - resourcemanager
                      number: 1
                    
                    - service: 
                        - datanode
                        - nodemanager
                        - spark
                      number: 2
                </programlisting>
                 With this configuration file, we will create 5 security groups which will have as a name the first
                 service defined in the list. This will also open the ports for those security groups. It will install
                 the defined services for each of the nodes in that specific group of nodes.
            </para>
        </section>
        <section>
            <title>Cluster in OpenStack</title>
            <para>
                Taking the previous case for Amazon EC2, we can easily the same cluster description using the
                same cluster definition file. In this the only section we need to change is related to the provider
                we want to use which in this case is OpenStack. The file will look as follows:
                <programlisting>
                    !!se.kth.kthfsdashboard.virtualization.clusterparser.Cluster
                    name: nova             
                    provider:
                        name: openstack-nova
                        instanceType: 7
                        loginUser: ubuntu
                        image: 0190f9c4-d64e-4412-ab88-4f9fd1d7c2e3 
                        region: RegionSICS
                    
                    ##lists of groups, with the roles the nodes 
                    ##will have and open ports 
                    nodes:
                    - service: 
                        - ndb
                      number: 2
    
                    - service: 
                        - mgm
                      number: 1
    
                    - service:
                        - mysqld
                        - namenode
                      number: 1
                    
                    - service: 
                        - namenode
                        - resourcemanager
                      number: 1
                    
                    - service: 
                        - datanode
                        - nodemanager
                        - spark
                      number: 2
                </programlisting>
                With this configuration file, it is possible to deploy the same cluster we defined in Amazon EC2
                without any major changes. You only need to change the provider specifications to match the
                details of your OpenStack Infrastructure.
            </para>
        </section>
        <section>
            <title>Cluster on Baremetal Machines</title>
            <para>
                How would we describe the same cluster for Amazon EC2 in a cluster of physical machines?
                In this case it is much simpler but you need to watch out for minor details like in this case
                the class tag needs to be different for this types of clusters as we will see. Also in this case, you
                need to provide the IP addresses of the machines to connect to. An example is as follows:
            </para>
            <programlisting>
               !!se.kth.kthfsdashboard.virtualization.clusterparser.Baremetal
                    name: baremetal
                    loginUser: ubuntu
                    totalHosts: 7
                    nodes:
                        - service: ndb
                          number: 2
                          hosts: 
                            - 10.20.0.8 
                            - 10.20.0.11
    
                        - service: mgm
                          number: 1
                          hosts: 
                            - 10.20.0.6
    
                        - service: 
                            - mysqld 
                            - namenode
                          number: 1
                          hosts: 
                            - 10.20.0.7
    
                        - service: 
                            - namenode
                            - resourcemanager
                          number: 1
                          hosts: 
                            - 10.20.0.12 
                            - 10.20.0.14
    
                        - service: 
                            - datanode
                            - nodemanager
                            - spark
                          number: 2
                          hosts: 
                            - 10.20.0.16 
                            - 10.20.0.17
            </programlisting>
            With this configuration file, it is possible to deploy the same cluster we defined in Amazon EC2
            without any major changes. You only need to change the provider specifications to match the
            details of your OpenStack Infrastructure.
        </section>
    </section>
</section>
